// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define.proto

#ifndef PROTOBUF_define_2eproto__INCLUDED
#define PROTOBUF_define_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace packets {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_define_2eproto();
void protobuf_AssignDesc_define_2eproto();
void protobuf_ShutdownFile_define_2eproto();

class Header;

enum SystemCode {
  WORLD = 0,
  SystemCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SystemCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SystemCode_IsValid(int value);
const SystemCode SystemCode_MIN = WORLD;
const SystemCode SystemCode_MAX = WORLD;
const int SystemCode_ARRAYSIZE = SystemCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SystemCode_descriptor();
inline const ::std::string& SystemCode_Name(SystemCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SystemCode_descriptor(), value);
}
inline bool SystemCode_Parse(
    const ::std::string& name, SystemCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SystemCode>(
    SystemCode_descriptor(), name, value);
}
// ===================================================================

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packets.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  void Swap(Header* other);

  // implements Message ----------------------------------------------

  inline Header* New() const { return New(NULL); }

  Header* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional fixed32 systemCode = 2;
  void clear_systemcode();
  static const int kSystemCodeFieldNumber = 2;
  ::google::protobuf::uint32 systemcode() const;
  void set_systemcode(::google::protobuf::uint32 value);

  // optional fixed32 packetCode = 3;
  void clear_packetcode();
  static const int kPacketCodeFieldNumber = 3;
  ::google::protobuf::uint32 packetcode() const;
  void set_packetcode(::google::protobuf::uint32 value);

  // optional fixed32 seq = 4;
  void clear_seq();
  static const int kSeqFieldNumber = 4;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:packets.Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 systemcode_;
  ::google::protobuf::uint32 packetcode_;
  ::google::protobuf::uint32 seq_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_define_2eproto();
  friend void protobuf_AssignDesc_define_2eproto();
  friend void protobuf_ShutdownFile_define_2eproto();

  void InitAsDefaultInstance();
  static Header* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Header

// optional fixed32 size = 1;
inline void Header::clear_size() {
  size_ = 0u;
}
inline ::google::protobuf::uint32 Header::size() const {
  // @@protoc_insertion_point(field_get:packets.Header.size)
  return size_;
}
inline void Header::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:packets.Header.size)
}

// optional fixed32 systemCode = 2;
inline void Header::clear_systemcode() {
  systemcode_ = 0u;
}
inline ::google::protobuf::uint32 Header::systemcode() const {
  // @@protoc_insertion_point(field_get:packets.Header.systemCode)
  return systemcode_;
}
inline void Header::set_systemcode(::google::protobuf::uint32 value) {
  
  systemcode_ = value;
  // @@protoc_insertion_point(field_set:packets.Header.systemCode)
}

// optional fixed32 packetCode = 3;
inline void Header::clear_packetcode() {
  packetcode_ = 0u;
}
inline ::google::protobuf::uint32 Header::packetcode() const {
  // @@protoc_insertion_point(field_get:packets.Header.packetCode)
  return packetcode_;
}
inline void Header::set_packetcode(::google::protobuf::uint32 value) {
  
  packetcode_ = value;
  // @@protoc_insertion_point(field_set:packets.Header.packetCode)
}

// optional fixed32 seq = 4;
inline void Header::clear_seq() {
  seq_ = 0u;
}
inline ::google::protobuf::uint32 Header::seq() const {
  // @@protoc_insertion_point(field_get:packets.Header.seq)
  return seq_;
}
inline void Header::set_seq(::google::protobuf::uint32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:packets.Header.seq)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace packets

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::packets::SystemCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::packets::SystemCode>() {
  return ::packets::SystemCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_define_2eproto__INCLUDED
