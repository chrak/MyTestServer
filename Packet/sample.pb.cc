// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sample.proto

#if WITH_GOOGLE_PROTOBUF_BINDING == 1
#include "AllowWindowsPlatformTypes.h"
#endif // WITH_GOOGLE_PROTOBUF_BINDING

#if _MSC_VER >= 1300
#ifndef _PS3
#pragma warning(push)
#pragma warning(disable : 4530)	// warning C4530: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc (disabled due to std headers having exception syntax)
#pragma warning(disable : 4512)	// warning C4512: assignment operator could not be generated
#pragma warning(disable : 4244)	// warning C4244:  warning C4244: '=' : conversion from '__w64 int' to 'int', possible loss of data
#pragma warning(disable : 4267)	// warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
#pragma warning(disable : 4125)	// warning C4125: decimal digit terminates octal escape sequence
#pragma warning(disable : 4127)	// warning C4127: conditional expression is constant
#pragma warning(disable : 4100)	// warning C4100: 'op' : unreferenced formal parameter
#endif // _PS3
#endif // _MSC_VER
#if _GNUC
#ifndef _PS3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wshadow"
#endif // _PS3
#endif // _GNUC

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sample.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace packets {

namespace {

const ::google::protobuf::Descriptor* EnterWorld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterWorld_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnterPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* Move_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Move_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveWorld_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveWorld_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeavePacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeavePacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharSelectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharSelectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CharSelectAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CharSelectAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZoneMoveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZoneMoveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZoneMoveAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZoneMoveAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* PingReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PingReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateDispatchReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateDispatchReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateDispatchReq_UpdateGold_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateDispatchReq_UpdateGold_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateDispatchReq_UpdateGold_GoldData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateDispatchReq_UpdateGold_GoldData_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateDispatchReq_UpdateItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateDispatchReq_UpdateItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateDispatchReq_UpdateItem_ItemData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateDispatchReq_UpdateItem_ItemData_reflection_ = NULL;
const ::google::protobuf::Descriptor* VSDisconnectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VSDisconnectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* VSDisconnectNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VSDisconnectNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sample_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_sample_2eproto() {
  protobuf_AddDesc_sample_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sample.proto");
  GOOGLE_CHECK(file != NULL);
  EnterWorld_descriptor_ = file->message_type(0);
  static const int EnterWorld_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorld, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorld, zoneid_),
  };
  EnterWorld_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterWorld_descriptor_,
      EnterWorld::default_instance_,
      EnterWorld_offsets_,
      -1,
      -1,
      -1,
      sizeof(EnterWorld),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorld, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorld, _is_default_instance_));
  EnterPacket_descriptor_ = file->message_type(1);
  static const int EnterPacket_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterPacket, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterPacket, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterPacket, position_),
  };
  EnterPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterPacket_descriptor_,
      EnterPacket::default_instance_,
      EnterPacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(EnterPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterPacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterPacket, _is_default_instance_));
  Move_descriptor_ = file->message_type(2);
  static const int Move_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Move, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Move, position_),
  };
  Move_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Move_descriptor_,
      Move::default_instance_,
      Move_offsets_,
      -1,
      -1,
      -1,
      sizeof(Move),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Move, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Move, _is_default_instance_));
  LeaveWorld_descriptor_ = file->message_type(3);
  static const int LeaveWorld_offsets_[1] = {
  };
  LeaveWorld_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LeaveWorld_descriptor_,
      LeaveWorld::default_instance_,
      LeaveWorld_offsets_,
      -1,
      -1,
      -1,
      sizeof(LeaveWorld),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveWorld, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveWorld, _is_default_instance_));
  LeavePacket_descriptor_ = file->message_type(4);
  static const int LeavePacket_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeavePacket, actorid_),
  };
  LeavePacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LeavePacket_descriptor_,
      LeavePacket::default_instance_,
      LeavePacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(LeavePacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeavePacket, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeavePacket, _is_default_instance_));
  LoginReq_descriptor_ = file->message_type(5);
  static const int LoginReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, pass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, serialid_),
  };
  LoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginReq_descriptor_,
      LoginReq::default_instance_,
      LoginReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _is_default_instance_));
  LoginAck_descriptor_ = file->message_type(6);
  static const int LoginAck_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, result_),
  };
  LoginAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginAck_descriptor_,
      LoginAck::default_instance_,
      LoginAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginAck, _is_default_instance_));
  CharSelectReq_descriptor_ = file->message_type(7);
  static const int CharSelectReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectReq, classtype_),
  };
  CharSelectReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharSelectReq_descriptor_,
      CharSelectReq::default_instance_,
      CharSelectReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CharSelectReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectReq, _is_default_instance_));
  CharSelectAck_descriptor_ = file->message_type(8);
  static const int CharSelectAck_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectAck, isnewchar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectAck, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectAck, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectAck, zoneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectAck, result_),
  };
  CharSelectAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CharSelectAck_descriptor_,
      CharSelectAck::default_instance_,
      CharSelectAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(CharSelectAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CharSelectAck, _is_default_instance_));
  ZoneMoveReq_descriptor_ = file->message_type(9);
  static const int ZoneMoveReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneMoveReq, zoneid_),
  };
  ZoneMoveReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZoneMoveReq_descriptor_,
      ZoneMoveReq::default_instance_,
      ZoneMoveReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ZoneMoveReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneMoveReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneMoveReq, _is_default_instance_));
  ZoneMoveAck_descriptor_ = file->message_type(10);
  static const int ZoneMoveAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneMoveAck, result_),
  };
  ZoneMoveAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZoneMoveAck_descriptor_,
      ZoneMoveAck::default_instance_,
      ZoneMoveAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(ZoneMoveAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneMoveAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZoneMoveAck, _is_default_instance_));
  PingReq_descriptor_ = file->message_type(11);
  static const int PingReq_offsets_[1] = {
  };
  PingReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PingReq_descriptor_,
      PingReq::default_instance_,
      PingReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(PingReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, _is_default_instance_));
  UpdateDispatchReq_descriptor_ = file->message_type(12);
  static const int UpdateDispatchReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq, goldlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq, itemlist_),
  };
  UpdateDispatchReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateDispatchReq_descriptor_,
      UpdateDispatchReq::default_instance_,
      UpdateDispatchReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateDispatchReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq, _is_default_instance_));
  UpdateDispatchReq_UpdateGold_descriptor_ = UpdateDispatchReq_descriptor_->nested_type(0);
  static const int UpdateDispatchReq_UpdateGold_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateGold, goldlist_),
  };
  UpdateDispatchReq_UpdateGold_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateDispatchReq_UpdateGold_descriptor_,
      UpdateDispatchReq_UpdateGold::default_instance_,
      UpdateDispatchReq_UpdateGold_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateDispatchReq_UpdateGold),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateGold, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateGold, _is_default_instance_));
  UpdateDispatchReq_UpdateGold_GoldData_descriptor_ = UpdateDispatchReq_UpdateGold_descriptor_->nested_type(0);
  static const int UpdateDispatchReq_UpdateGold_GoldData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateGold_GoldData, moneytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateGold_GoldData, add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateGold_GoldData, total_),
  };
  UpdateDispatchReq_UpdateGold_GoldData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateDispatchReq_UpdateGold_GoldData_descriptor_,
      UpdateDispatchReq_UpdateGold_GoldData::default_instance_,
      UpdateDispatchReq_UpdateGold_GoldData_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateDispatchReq_UpdateGold_GoldData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateGold_GoldData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateGold_GoldData, _is_default_instance_));
  UpdateDispatchReq_UpdateItem_descriptor_ = UpdateDispatchReq_descriptor_->nested_type(1);
  static const int UpdateDispatchReq_UpdateItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateItem, addlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateItem, deletelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateItem, updatelist_),
  };
  UpdateDispatchReq_UpdateItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateDispatchReq_UpdateItem_descriptor_,
      UpdateDispatchReq_UpdateItem::default_instance_,
      UpdateDispatchReq_UpdateItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateDispatchReq_UpdateItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateItem, _is_default_instance_));
  UpdateDispatchReq_UpdateItem_ItemData_descriptor_ = UpdateDispatchReq_UpdateItem_descriptor_->nested_type(0);
  static const int UpdateDispatchReq_UpdateItem_ItemData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateItem_ItemData, serialid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateItem_ItemData, durability_),
  };
  UpdateDispatchReq_UpdateItem_ItemData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateDispatchReq_UpdateItem_ItemData_descriptor_,
      UpdateDispatchReq_UpdateItem_ItemData::default_instance_,
      UpdateDispatchReq_UpdateItem_ItemData_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateDispatchReq_UpdateItem_ItemData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateItem_ItemData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDispatchReq_UpdateItem_ItemData, _is_default_instance_));
  VSDisconnectReq_descriptor_ = file->message_type(13);
  static const int VSDisconnectReq_offsets_[1] = {
  };
  VSDisconnectReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VSDisconnectReq_descriptor_,
      VSDisconnectReq::default_instance_,
      VSDisconnectReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(VSDisconnectReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VSDisconnectReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VSDisconnectReq, _is_default_instance_));
  VSDisconnectNotify_descriptor_ = file->message_type(14);
  static const int VSDisconnectNotify_offsets_[1] = {
  };
  VSDisconnectNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VSDisconnectNotify_descriptor_,
      VSDisconnectNotify::default_instance_,
      VSDisconnectNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(VSDisconnectNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VSDisconnectNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VSDisconnectNotify, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sample_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterWorld_descriptor_, &EnterWorld::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterPacket_descriptor_, &EnterPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Move_descriptor_, &Move::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LeaveWorld_descriptor_, &LeaveWorld::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LeavePacket_descriptor_, &LeavePacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginReq_descriptor_, &LoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginAck_descriptor_, &LoginAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharSelectReq_descriptor_, &CharSelectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CharSelectAck_descriptor_, &CharSelectAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZoneMoveReq_descriptor_, &ZoneMoveReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZoneMoveAck_descriptor_, &ZoneMoveAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PingReq_descriptor_, &PingReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateDispatchReq_descriptor_, &UpdateDispatchReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateDispatchReq_UpdateGold_descriptor_, &UpdateDispatchReq_UpdateGold::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateDispatchReq_UpdateGold_GoldData_descriptor_, &UpdateDispatchReq_UpdateGold_GoldData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateDispatchReq_UpdateItem_descriptor_, &UpdateDispatchReq_UpdateItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateDispatchReq_UpdateItem_ItemData_descriptor_, &UpdateDispatchReq_UpdateItem_ItemData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VSDisconnectReq_descriptor_, &VSDisconnectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VSDisconnectNotify_descriptor_, &VSDisconnectNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sample_2eproto() {
  delete EnterWorld::default_instance_;
  delete EnterWorld_reflection_;
  delete EnterPacket::default_instance_;
  delete EnterPacket_reflection_;
  delete Move::default_instance_;
  delete Move_reflection_;
  delete LeaveWorld::default_instance_;
  delete LeaveWorld_reflection_;
  delete LeavePacket::default_instance_;
  delete LeavePacket_reflection_;
  delete LoginReq::default_instance_;
  delete LoginReq_reflection_;
  delete LoginAck::default_instance_;
  delete LoginAck_reflection_;
  delete CharSelectReq::default_instance_;
  delete CharSelectReq_reflection_;
  delete CharSelectAck::default_instance_;
  delete CharSelectAck_reflection_;
  delete ZoneMoveReq::default_instance_;
  delete ZoneMoveReq_reflection_;
  delete ZoneMoveAck::default_instance_;
  delete ZoneMoveAck_reflection_;
  delete PingReq::default_instance_;
  delete PingReq_reflection_;
  delete UpdateDispatchReq::default_instance_;
  delete UpdateDispatchReq_reflection_;
  delete UpdateDispatchReq_UpdateGold::default_instance_;
  delete UpdateDispatchReq_UpdateGold_reflection_;
  delete UpdateDispatchReq_UpdateGold_GoldData::default_instance_;
  delete UpdateDispatchReq_UpdateGold_GoldData_reflection_;
  delete UpdateDispatchReq_UpdateItem::default_instance_;
  delete UpdateDispatchReq_UpdateItem_reflection_;
  delete UpdateDispatchReq_UpdateItem_ItemData::default_instance_;
  delete UpdateDispatchReq_UpdateItem_ItemData_reflection_;
  delete VSDisconnectReq::default_instance_;
  delete VSDisconnectReq_reflection_;
  delete VSDisconnectNotify::default_instance_;
  delete VSDisconnectNotify_reflection_;
}

void protobuf_AddDesc_sample_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_sample_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::packets::protobuf_AddDesc_types_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014sample.proto\022\007packets\032\013types.proto\"-\n\n"
    "EnterWorld\022\017\n\007ActorID\030\001 \001(\003\022\016\n\006ZoneID\030\002 "
    "\001(\005\"d\n\013EnterPacket\022 \n\004type\030\001 \001(\0162\022.packe"
    "ts.ActorType\022\017\n\007ActorID\030\002 \001(\003\022\"\n\010Positio"
    "n\030\003 \001(\0132\020.packets.Vector3\";\n\004Move\022\017\n\007Act"
    "orID\030\001 \001(\003\022\"\n\010Position\030\002 \001(\0132\020.packets.V"
    "ector3\"\014\n\nLeaveWorld\"\036\n\013LeavePacket\022\017\n\007A"
    "ctorID\030\001 \001(\003\"6\n\010LoginReq\022\n\n\002ID\030\001 \001(\t\022\014\n\004"
    "Pass\030\002 \001(\t\022\020\n\010SerialID\030\003 \001(\003\"P\n\010LoginAck"
    "\022\016\n\006UserID\030\001 \001(\003\022\017\n\007ActorID\030\002 \001(\003\022#\n\006Res"
    "ult\030\003 \001(\0162\023.packets.ResultType\"\"\n\rCharSe"
    "lectReq\022\021\n\tClassType\030\001 \001(\003\"x\n\rCharSelect"
    "Ack\022\021\n\tIsNewChar\030\001 \001(\010\022\016\n\006UserID\030\002 \001(\003\022\017"
    "\n\007ActorID\030\003 \001(\003\022\016\n\006ZoneID\030\004 \001(\005\022#\n\006Resul"
    "t\030\005 \001(\0162\023.packets.ResultType\"\035\n\013ZoneMove"
    "Req\022\016\n\006ZoneID\030\001 \001(\005\"2\n\013ZoneMoveAck\022#\n\006Re"
    "sult\030\001 \001(\0162\023.packets.ResultType\"\t\n\007PingR"
    "eq\"\253\004\n\021UpdateDispatchReq\022\016\n\006UserID\030\001 \001(\003"
    "\0227\n\010GoldList\030\002 \003(\0132%.packets.UpdateDispa"
    "tchReq.UpdateGold\0227\n\010ItemList\030\003 \003(\0132%.pa"
    "ckets.UpdateDispatchReq.UpdateItem\032\211\001\n\nU"
    "pdateGold\022@\n\010GoldList\030\001 \003(\0132..packets.Up"
    "dateDispatchReq.UpdateGold.GoldData\0329\n\010G"
    "oldData\022\021\n\tMoneyType\030\001 \001(\005\022\013\n\003Add\030\002 \001(\003\022"
    "\r\n\005Total\030\003 \001(\003\032\207\002\n\nUpdateItem\022\?\n\007AddList"
    "\030\001 \003(\0132..packets.UpdateDispatchReq.Updat"
    "eItem.ItemData\022B\n\nDeleteList\030\002 \003(\0132..pac"
    "kets.UpdateDispatchReq.UpdateItem.ItemDa"
    "ta\022B\n\nUpdateList\030\003 \003(\0132..packets.UpdateD"
    "ispatchReq.UpdateItem.ItemData\0320\n\010ItemDa"
    "ta\022\020\n\010SerialId\030\001 \001(\003\022\022\n\nDurability\030\002 \001(\005"
    "\"\021\n\017VSDisconnectReq\"\024\n\022VSDisconnectNotif"
    "yb\006proto3", 1289);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sample.proto", &protobuf_RegisterTypes);
  EnterWorld::default_instance_ = new EnterWorld();
  EnterPacket::default_instance_ = new EnterPacket();
  Move::default_instance_ = new Move();
  LeaveWorld::default_instance_ = new LeaveWorld();
  LeavePacket::default_instance_ = new LeavePacket();
  LoginReq::default_instance_ = new LoginReq();
  LoginAck::default_instance_ = new LoginAck();
  CharSelectReq::default_instance_ = new CharSelectReq();
  CharSelectAck::default_instance_ = new CharSelectAck();
  ZoneMoveReq::default_instance_ = new ZoneMoveReq();
  ZoneMoveAck::default_instance_ = new ZoneMoveAck();
  PingReq::default_instance_ = new PingReq();
  UpdateDispatchReq::default_instance_ = new UpdateDispatchReq();
  UpdateDispatchReq_UpdateGold::default_instance_ = new UpdateDispatchReq_UpdateGold();
  UpdateDispatchReq_UpdateGold_GoldData::default_instance_ = new UpdateDispatchReq_UpdateGold_GoldData();
  UpdateDispatchReq_UpdateItem::default_instance_ = new UpdateDispatchReq_UpdateItem();
  UpdateDispatchReq_UpdateItem_ItemData::default_instance_ = new UpdateDispatchReq_UpdateItem_ItemData();
  VSDisconnectReq::default_instance_ = new VSDisconnectReq();
  VSDisconnectNotify::default_instance_ = new VSDisconnectNotify();
  EnterWorld::default_instance_->InitAsDefaultInstance();
  EnterPacket::default_instance_->InitAsDefaultInstance();
  Move::default_instance_->InitAsDefaultInstance();
  LeaveWorld::default_instance_->InitAsDefaultInstance();
  LeavePacket::default_instance_->InitAsDefaultInstance();
  LoginReq::default_instance_->InitAsDefaultInstance();
  LoginAck::default_instance_->InitAsDefaultInstance();
  CharSelectReq::default_instance_->InitAsDefaultInstance();
  CharSelectAck::default_instance_->InitAsDefaultInstance();
  ZoneMoveReq::default_instance_->InitAsDefaultInstance();
  ZoneMoveAck::default_instance_->InitAsDefaultInstance();
  PingReq::default_instance_->InitAsDefaultInstance();
  UpdateDispatchReq::default_instance_->InitAsDefaultInstance();
  UpdateDispatchReq_UpdateGold::default_instance_->InitAsDefaultInstance();
  UpdateDispatchReq_UpdateGold_GoldData::default_instance_->InitAsDefaultInstance();
  UpdateDispatchReq_UpdateItem::default_instance_->InitAsDefaultInstance();
  UpdateDispatchReq_UpdateItem_ItemData::default_instance_->InitAsDefaultInstance();
  VSDisconnectReq::default_instance_->InitAsDefaultInstance();
  VSDisconnectNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sample_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sample_2eproto {
  StaticDescriptorInitializer_sample_2eproto() {
    protobuf_AddDesc_sample_2eproto();
  }
} static_descriptor_initializer_sample_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterWorld::kActorIDFieldNumber;
const int EnterWorld::kZoneIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterWorld::EnterWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.EnterWorld)
}

void EnterWorld::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EnterWorld::EnterWorld(const EnterWorld& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.EnterWorld)
}

void EnterWorld::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  actorid_ = GOOGLE_LONGLONG(0);
  zoneid_ = 0;
}

EnterWorld::~EnterWorld() {
  // @@protoc_insertion_point(destructor:packets.EnterWorld)
  SharedDtor();
}

void EnterWorld::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnterWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterWorld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterWorld_descriptor_;
}

const EnterWorld& EnterWorld::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

EnterWorld* EnterWorld::default_instance_ = NULL;

EnterWorld* EnterWorld::New(::google::protobuf::Arena* arena) const {
  EnterWorld* n = new EnterWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.EnterWorld)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EnterWorld, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EnterWorld*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(actorid_, zoneid_);

#undef ZR_HELPER_
#undef ZR_

}

bool EnterWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.EnterWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ActorID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ZoneID;
        break;
      }

      // optional int32 ZoneID = 2;
      case 2: {
        if (tag == 16) {
         parse_ZoneID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zoneid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.EnterWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.EnterWorld)
  return false;
#undef DO_
}

void EnterWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.EnterWorld)
  // optional int64 ActorID = 1;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->actorid(), output);
  }

  // optional int32 ZoneID = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->zoneid(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.EnterWorld)
}

::google::protobuf::uint8* EnterWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.EnterWorld)
  // optional int64 ActorID = 1;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->actorid(), target);
  }

  // optional int32 ZoneID = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->zoneid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.EnterWorld)
  return target;
}

int EnterWorld::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.EnterWorld)
  int total_size = 0;

  // optional int64 ActorID = 1;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actorid());
  }

  // optional int32 ZoneID = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zoneid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.EnterWorld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterWorld* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.EnterWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.EnterWorld)
    MergeFrom(*source);
  }
}

void EnterWorld::MergeFrom(const EnterWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.EnterWorld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void EnterWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.EnterWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterWorld::CopyFrom(const EnterWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.EnterWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterWorld::IsInitialized() const {

  return true;
}

void EnterWorld::Swap(EnterWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterWorld::InternalSwap(EnterWorld* other) {
  std::swap(actorid_, other->actorid_);
  std::swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterWorld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterWorld_descriptor_;
  metadata.reflection = EnterWorld_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterWorld

// optional int64 ActorID = 1;
void EnterWorld::clear_actorid() {
  actorid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 EnterWorld::actorid() const {
  // @@protoc_insertion_point(field_get:packets.EnterWorld.ActorID)
  return actorid_;
}
 void EnterWorld::set_actorid(::google::protobuf::int64 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:packets.EnterWorld.ActorID)
}

// optional int32 ZoneID = 2;
void EnterWorld::clear_zoneid() {
  zoneid_ = 0;
}
 ::google::protobuf::int32 EnterWorld::zoneid() const {
  // @@protoc_insertion_point(field_get:packets.EnterWorld.ZoneID)
  return zoneid_;
}
 void EnterWorld::set_zoneid(::google::protobuf::int32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:packets.EnterWorld.ZoneID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterPacket::kTypeFieldNumber;
const int EnterPacket::kActorIDFieldNumber;
const int EnterPacket::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterPacket::EnterPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.EnterPacket)
}

void EnterPacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  position_ = const_cast< ::packets::Vector3*>(&::packets::Vector3::default_instance());
}

EnterPacket::EnterPacket(const EnterPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.EnterPacket)
}

void EnterPacket::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  actorid_ = GOOGLE_LONGLONG(0);
  position_ = NULL;
}

EnterPacket::~EnterPacket() {
  // @@protoc_insertion_point(destructor:packets.EnterPacket)
  SharedDtor();
}

void EnterPacket::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void EnterPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterPacket_descriptor_;
}

const EnterPacket& EnterPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

EnterPacket* EnterPacket::default_instance_ = NULL;

EnterPacket* EnterPacket::New(::google::protobuf::Arena* arena) const {
  EnterPacket* n = new EnterPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.EnterPacket)
  type_ = 0;
  actorid_ = GOOGLE_LONGLONG(0);
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}

bool EnterPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.EnterPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .packets.ActorType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::packets::ActorType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ActorID;
        break;
      }

      // optional int64 ActorID = 2;
      case 2: {
        if (tag == 16) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Position;
        break;
      }

      // optional .packets.Vector3 Position = 3;
      case 3: {
        if (tag == 26) {
         parse_Position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.EnterPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.EnterPacket)
  return false;
#undef DO_
}

void EnterPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.EnterPacket)
  // optional .packets.ActorType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int64 ActorID = 2;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->actorid(), output);
  }

  // optional .packets.Vector3 Position = 3;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->position_, output);
  }

  // @@protoc_insertion_point(serialize_end:packets.EnterPacket)
}

::google::protobuf::uint8* EnterPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.EnterPacket)
  // optional .packets.ActorType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int64 ActorID = 2;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->actorid(), target);
  }

  // optional .packets.Vector3 Position = 3;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->position_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.EnterPacket)
  return target;
}

int EnterPacket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.EnterPacket)
  int total_size = 0;

  // optional .packets.ActorType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional int64 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actorid());
  }

  // optional .packets.Vector3 Position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.EnterPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterPacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.EnterPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.EnterPacket)
    MergeFrom(*source);
  }
}

void EnterPacket::MergeFrom(const EnterPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.EnterPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.has_position()) {
    mutable_position()->::packets::Vector3::MergeFrom(from.position());
  }
}

void EnterPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.EnterPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterPacket::CopyFrom(const EnterPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.EnterPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterPacket::IsInitialized() const {

  return true;
}

void EnterPacket::Swap(EnterPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterPacket::InternalSwap(EnterPacket* other) {
  std::swap(type_, other->type_);
  std::swap(actorid_, other->actorid_);
  std::swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterPacket_descriptor_;
  metadata.reflection = EnterPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterPacket

// optional .packets.ActorType type = 1;
void EnterPacket::clear_type() {
  type_ = 0;
}
 ::packets::ActorType EnterPacket::type() const {
  // @@protoc_insertion_point(field_get:packets.EnterPacket.type)
  return static_cast< ::packets::ActorType >(type_);
}
 void EnterPacket::set_type(::packets::ActorType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:packets.EnterPacket.type)
}

// optional int64 ActorID = 2;
void EnterPacket::clear_actorid() {
  actorid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 EnterPacket::actorid() const {
  // @@protoc_insertion_point(field_get:packets.EnterPacket.ActorID)
  return actorid_;
}
 void EnterPacket::set_actorid(::google::protobuf::int64 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:packets.EnterPacket.ActorID)
}

// optional .packets.Vector3 Position = 3;
bool EnterPacket::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
void EnterPacket::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::packets::Vector3& EnterPacket::position() const {
  // @@protoc_insertion_point(field_get:packets.EnterPacket.Position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
::packets::Vector3* EnterPacket::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::packets::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:packets.EnterPacket.Position)
  return position_;
}
::packets::Vector3* EnterPacket::release_position() {
  // @@protoc_insertion_point(field_release:packets.EnterPacket.Position)
  
  ::packets::Vector3* temp = position_;
  position_ = NULL;
  return temp;
}
void EnterPacket::set_allocated_position(::packets::Vector3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:packets.EnterPacket.Position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Move::kActorIDFieldNumber;
const int Move::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Move::Move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.Move)
}

void Move::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  position_ = const_cast< ::packets::Vector3*>(&::packets::Vector3::default_instance());
}

Move::Move(const Move& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.Move)
}

void Move::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  actorid_ = GOOGLE_LONGLONG(0);
  position_ = NULL;
}

Move::~Move() {
  // @@protoc_insertion_point(destructor:packets.Move)
  SharedDtor();
}

void Move::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
  }
}

void Move::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Move::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Move_descriptor_;
}

const Move& Move::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

Move* Move::default_instance_ = NULL;

Move* Move::New(::google::protobuf::Arena* arena) const {
  Move* n = new Move;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Move::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.Move)
  actorid_ = GOOGLE_LONGLONG(0);
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}

bool Move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.Move)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ActorID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Position;
        break;
      }

      // optional .packets.Vector3 Position = 2;
      case 2: {
        if (tag == 18) {
         parse_Position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.Move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.Move)
  return false;
#undef DO_
}

void Move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.Move)
  // optional int64 ActorID = 1;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->actorid(), output);
  }

  // optional .packets.Vector3 Position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  // @@protoc_insertion_point(serialize_end:packets.Move)
}

::google::protobuf::uint8* Move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.Move)
  // optional int64 ActorID = 1;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->actorid(), target);
  }

  // optional .packets.Vector3 Position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->position_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.Move)
  return target;
}

int Move::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.Move)
  int total_size = 0;

  // optional int64 ActorID = 1;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actorid());
  }

  // optional .packets.Vector3 Position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.Move)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Move* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.Move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.Move)
    MergeFrom(*source);
  }
}

void Move::MergeFrom(const Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.Move)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.has_position()) {
    mutable_position()->::packets::Vector3::MergeFrom(from.position());
  }
}

void Move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Move::CopyFrom(const Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Move::IsInitialized() const {

  return true;
}

void Move::Swap(Move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Move::InternalSwap(Move* other) {
  std::swap(actorid_, other->actorid_);
  std::swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Move::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Move_descriptor_;
  metadata.reflection = Move_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Move

// optional int64 ActorID = 1;
void Move::clear_actorid() {
  actorid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Move::actorid() const {
  // @@protoc_insertion_point(field_get:packets.Move.ActorID)
  return actorid_;
}
 void Move::set_actorid(::google::protobuf::int64 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:packets.Move.ActorID)
}

// optional .packets.Vector3 Position = 2;
bool Move::has_position() const {
  return !_is_default_instance_ && position_ != NULL;
}
void Move::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::packets::Vector3& Move::position() const {
  // @@protoc_insertion_point(field_get:packets.Move.Position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
::packets::Vector3* Move::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::packets::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:packets.Move.Position)
  return position_;
}
::packets::Vector3* Move::release_position() {
  // @@protoc_insertion_point(field_release:packets.Move.Position)
  
  ::packets::Vector3* temp = position_;
  position_ = NULL;
  return temp;
}
void Move::set_allocated_position(::packets::Vector3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:packets.Move.Position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveWorld::LeaveWorld()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.LeaveWorld)
}

void LeaveWorld::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LeaveWorld::LeaveWorld(const LeaveWorld& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.LeaveWorld)
}

void LeaveWorld::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

LeaveWorld::~LeaveWorld() {
  // @@protoc_insertion_point(destructor:packets.LeaveWorld)
  SharedDtor();
}

void LeaveWorld::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LeaveWorld::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveWorld::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveWorld_descriptor_;
}

const LeaveWorld& LeaveWorld::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

LeaveWorld* LeaveWorld::default_instance_ = NULL;

LeaveWorld* LeaveWorld::New(::google::protobuf::Arena* arena) const {
  LeaveWorld* n = new LeaveWorld;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveWorld::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.LeaveWorld)
}

bool LeaveWorld::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.LeaveWorld)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:packets.LeaveWorld)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.LeaveWorld)
  return false;
#undef DO_
}

void LeaveWorld::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.LeaveWorld)
  // @@protoc_insertion_point(serialize_end:packets.LeaveWorld)
}

::google::protobuf::uint8* LeaveWorld::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.LeaveWorld)
  // @@protoc_insertion_point(serialize_to_array_end:packets.LeaveWorld)
  return target;
}

int LeaveWorld::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.LeaveWorld)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveWorld::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.LeaveWorld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LeaveWorld* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveWorld>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.LeaveWorld)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.LeaveWorld)
    MergeFrom(*source);
  }
}

void LeaveWorld::MergeFrom(const LeaveWorld& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.LeaveWorld)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void LeaveWorld::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.LeaveWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveWorld::CopyFrom(const LeaveWorld& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.LeaveWorld)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveWorld::IsInitialized() const {

  return true;
}

void LeaveWorld::Swap(LeaveWorld* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveWorld::InternalSwap(LeaveWorld* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveWorld::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveWorld_descriptor_;
  metadata.reflection = LeaveWorld_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveWorld

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeavePacket::kActorIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeavePacket::LeavePacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.LeavePacket)
}

void LeavePacket::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LeavePacket::LeavePacket(const LeavePacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.LeavePacket)
}

void LeavePacket::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  actorid_ = GOOGLE_LONGLONG(0);
}

LeavePacket::~LeavePacket() {
  // @@protoc_insertion_point(destructor:packets.LeavePacket)
  SharedDtor();
}

void LeavePacket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LeavePacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeavePacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeavePacket_descriptor_;
}

const LeavePacket& LeavePacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

LeavePacket* LeavePacket::default_instance_ = NULL;

LeavePacket* LeavePacket::New(::google::protobuf::Arena* arena) const {
  LeavePacket* n = new LeavePacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeavePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.LeavePacket)
  actorid_ = GOOGLE_LONGLONG(0);
}

bool LeavePacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.LeavePacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ActorID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.LeavePacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.LeavePacket)
  return false;
#undef DO_
}

void LeavePacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.LeavePacket)
  // optional int64 ActorID = 1;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->actorid(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.LeavePacket)
}

::google::protobuf::uint8* LeavePacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.LeavePacket)
  // optional int64 ActorID = 1;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->actorid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.LeavePacket)
  return target;
}

int LeavePacket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.LeavePacket)
  int total_size = 0;

  // optional int64 ActorID = 1;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actorid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeavePacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.LeavePacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LeavePacket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LeavePacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.LeavePacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.LeavePacket)
    MergeFrom(*source);
  }
}

void LeavePacket::MergeFrom(const LeavePacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.LeavePacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
}

void LeavePacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.LeavePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeavePacket::CopyFrom(const LeavePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.LeavePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeavePacket::IsInitialized() const {

  return true;
}

void LeavePacket::Swap(LeavePacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeavePacket::InternalSwap(LeavePacket* other) {
  std::swap(actorid_, other->actorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeavePacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeavePacket_descriptor_;
  metadata.reflection = LeavePacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeavePacket

// optional int64 ActorID = 1;
void LeavePacket::clear_actorid() {
  actorid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 LeavePacket::actorid() const {
  // @@protoc_insertion_point(field_get:packets.LeavePacket.ActorID)
  return actorid_;
}
 void LeavePacket::set_actorid(::google::protobuf::int64 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:packets.LeavePacket.ActorID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kIDFieldNumber;
const int LoginReq::kPassFieldNumber;
const int LoginReq::kSerialIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.LoginReq)
}

void LoginReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.LoginReq)
}

void LoginReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialid_ = GOOGLE_LONGLONG(0);
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:packets.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginReq_descriptor_;
}

const LoginReq& LoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

LoginReq* LoginReq::default_instance_ = NULL;

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.LoginReq)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialid_ = GOOGLE_LONGLONG(0);
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packets.LoginReq.ID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Pass;
        break;
      }

      // optional string Pass = 2;
      case 2: {
        if (tag == 18) {
         parse_Pass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pass().data(), this->pass().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packets.LoginReq.Pass"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SerialID;
        break;
      }

      // optional int64 SerialID = 3;
      case 3: {
        if (tag == 24) {
         parse_SerialID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.LoginReq)
  // optional string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packets.LoginReq.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string Pass = 2;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packets.LoginReq.Pass");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pass(), output);
  }

  // optional int64 SerialID = 3;
  if (this->serialid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->serialid(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.LoginReq)
  // optional string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packets.LoginReq.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string Pass = 2;
  if (this->pass().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pass().data(), this->pass().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packets.LoginReq.Pass");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pass(), target);
  }

  // optional int64 SerialID = 3;
  if (this->serialid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->serialid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.LoginReq)
  return target;
}

int LoginReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.LoginReq)
  int total_size = 0;

  // optional string ID = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string Pass = 2;
  if (this->pass().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pass());
  }

  // optional int64 SerialID = 3;
  if (this->serialid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->serialid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.LoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.LoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.pass().size() > 0) {

    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  if (from.serialid() != 0) {
    set_serialid(from.serialid());
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {

  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  id_.Swap(&other->id_);
  pass_.Swap(&other->pass_);
  std::swap(serialid_, other->serialid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginReq_descriptor_;
  metadata.reflection = LoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// optional string ID = 1;
void LoginReq::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginReq::id() const {
  // @@protoc_insertion_point(field_get:packets.LoginReq.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packets.LoginReq.ID)
}
 void LoginReq::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packets.LoginReq.ID)
}
 void LoginReq::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packets.LoginReq.ID)
}
 ::std::string* LoginReq::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:packets.LoginReq.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginReq::release_id() {
  // @@protoc_insertion_point(field_release:packets.LoginReq.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:packets.LoginReq.ID)
}

// optional string Pass = 2;
void LoginReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoginReq::pass() const {
  // @@protoc_insertion_point(field_get:packets.LoginReq.Pass)
  return pass_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_pass(const ::std::string& value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:packets.LoginReq.Pass)
}
 void LoginReq::set_pass(const char* value) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:packets.LoginReq.Pass)
}
 void LoginReq::set_pass(const char* value, size_t size) {
  
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:packets.LoginReq.Pass)
}
 ::std::string* LoginReq::mutable_pass() {
  
  // @@protoc_insertion_point(field_mutable:packets.LoginReq.Pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginReq::release_pass() {
  // @@protoc_insertion_point(field_release:packets.LoginReq.Pass)
  
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    
  } else {
    
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:packets.LoginReq.Pass)
}

// optional int64 SerialID = 3;
void LoginReq::clear_serialid() {
  serialid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 LoginReq::serialid() const {
  // @@protoc_insertion_point(field_get:packets.LoginReq.SerialID)
  return serialid_;
}
 void LoginReq::set_serialid(::google::protobuf::int64 value) {
  
  serialid_ = value;
  // @@protoc_insertion_point(field_set:packets.LoginReq.SerialID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginAck::kUserIDFieldNumber;
const int LoginAck::kActorIDFieldNumber;
const int LoginAck::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginAck::LoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.LoginAck)
}

void LoginAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoginAck::LoginAck(const LoginAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.LoginAck)
}

void LoginAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = GOOGLE_LONGLONG(0);
  actorid_ = GOOGLE_LONGLONG(0);
  result_ = 0;
}

LoginAck::~LoginAck() {
  // @@protoc_insertion_point(destructor:packets.LoginAck)
  SharedDtor();
}

void LoginAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginAck_descriptor_;
}

const LoginAck& LoginAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

LoginAck* LoginAck::default_instance_ = NULL;

LoginAck* LoginAck::New(::google::protobuf::Arena* arena) const {
  LoginAck* n = new LoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.LoginAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LoginAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LoginAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, result_);

#undef ZR_HELPER_
#undef ZR_

}

bool LoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.LoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 UserID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ActorID;
        break;
      }

      // optional int64 ActorID = 2;
      case 2: {
        if (tag == 16) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Result;
        break;
      }

      // optional .packets.ResultType Result = 3;
      case 3: {
        if (tag == 24) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::packets::ResultType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.LoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.LoginAck)
  return false;
#undef DO_
}

void LoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.LoginAck)
  // optional int64 UserID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  // optional int64 ActorID = 2;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->actorid(), output);
  }

  // optional .packets.ResultType Result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.LoginAck)
}

::google::protobuf::uint8* LoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.LoginAck)
  // optional int64 UserID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  // optional int64 ActorID = 2;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->actorid(), target);
  }

  // optional .packets.ResultType Result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.LoginAck)
  return target;
}

int LoginAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.LoginAck)
  int total_size = 0;

  // optional int64 UserID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  // optional int64 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actorid());
  }

  // optional .packets.ResultType Result = 3;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.LoginAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LoginAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.LoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.LoginAck)
    MergeFrom(*source);
  }
}

void LoginAck::MergeFrom(const LoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.LoginAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void LoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.LoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginAck::CopyFrom(const LoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.LoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginAck::IsInitialized() const {

  return true;
}

void LoginAck::Swap(LoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginAck::InternalSwap(LoginAck* other) {
  std::swap(userid_, other->userid_);
  std::swap(actorid_, other->actorid_);
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginAck_descriptor_;
  metadata.reflection = LoginAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginAck

// optional int64 UserID = 1;
void LoginAck::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 LoginAck::userid() const {
  // @@protoc_insertion_point(field_get:packets.LoginAck.UserID)
  return userid_;
}
 void LoginAck::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:packets.LoginAck.UserID)
}

// optional int64 ActorID = 2;
void LoginAck::clear_actorid() {
  actorid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 LoginAck::actorid() const {
  // @@protoc_insertion_point(field_get:packets.LoginAck.ActorID)
  return actorid_;
}
 void LoginAck::set_actorid(::google::protobuf::int64 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:packets.LoginAck.ActorID)
}

// optional .packets.ResultType Result = 3;
void LoginAck::clear_result() {
  result_ = 0;
}
 ::packets::ResultType LoginAck::result() const {
  // @@protoc_insertion_point(field_get:packets.LoginAck.Result)
  return static_cast< ::packets::ResultType >(result_);
}
 void LoginAck::set_result(::packets::ResultType value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packets.LoginAck.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharSelectReq::kClassTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharSelectReq::CharSelectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.CharSelectReq)
}

void CharSelectReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CharSelectReq::CharSelectReq(const CharSelectReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.CharSelectReq)
}

void CharSelectReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  classtype_ = GOOGLE_LONGLONG(0);
}

CharSelectReq::~CharSelectReq() {
  // @@protoc_insertion_point(destructor:packets.CharSelectReq)
  SharedDtor();
}

void CharSelectReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CharSelectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharSelectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharSelectReq_descriptor_;
}

const CharSelectReq& CharSelectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

CharSelectReq* CharSelectReq::default_instance_ = NULL;

CharSelectReq* CharSelectReq::New(::google::protobuf::Arena* arena) const {
  CharSelectReq* n = new CharSelectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharSelectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.CharSelectReq)
  classtype_ = GOOGLE_LONGLONG(0);
}

bool CharSelectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.CharSelectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ClassType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &classtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.CharSelectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.CharSelectReq)
  return false;
#undef DO_
}

void CharSelectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.CharSelectReq)
  // optional int64 ClassType = 1;
  if (this->classtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->classtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.CharSelectReq)
}

::google::protobuf::uint8* CharSelectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.CharSelectReq)
  // optional int64 ClassType = 1;
  if (this->classtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->classtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.CharSelectReq)
  return target;
}

int CharSelectReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.CharSelectReq)
  int total_size = 0;

  // optional int64 ClassType = 1;
  if (this->classtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->classtype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharSelectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.CharSelectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CharSelectReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CharSelectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.CharSelectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.CharSelectReq)
    MergeFrom(*source);
  }
}

void CharSelectReq::MergeFrom(const CharSelectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.CharSelectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.classtype() != 0) {
    set_classtype(from.classtype());
  }
}

void CharSelectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.CharSelectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharSelectReq::CopyFrom(const CharSelectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.CharSelectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharSelectReq::IsInitialized() const {

  return true;
}

void CharSelectReq::Swap(CharSelectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharSelectReq::InternalSwap(CharSelectReq* other) {
  std::swap(classtype_, other->classtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharSelectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharSelectReq_descriptor_;
  metadata.reflection = CharSelectReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharSelectReq

// optional int64 ClassType = 1;
void CharSelectReq::clear_classtype() {
  classtype_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 CharSelectReq::classtype() const {
  // @@protoc_insertion_point(field_get:packets.CharSelectReq.ClassType)
  return classtype_;
}
 void CharSelectReq::set_classtype(::google::protobuf::int64 value) {
  
  classtype_ = value;
  // @@protoc_insertion_point(field_set:packets.CharSelectReq.ClassType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharSelectAck::kIsNewCharFieldNumber;
const int CharSelectAck::kUserIDFieldNumber;
const int CharSelectAck::kActorIDFieldNumber;
const int CharSelectAck::kZoneIDFieldNumber;
const int CharSelectAck::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharSelectAck::CharSelectAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.CharSelectAck)
}

void CharSelectAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CharSelectAck::CharSelectAck(const CharSelectAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.CharSelectAck)
}

void CharSelectAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  isnewchar_ = false;
  userid_ = GOOGLE_LONGLONG(0);
  actorid_ = GOOGLE_LONGLONG(0);
  zoneid_ = 0;
  result_ = 0;
}

CharSelectAck::~CharSelectAck() {
  // @@protoc_insertion_point(destructor:packets.CharSelectAck)
  SharedDtor();
}

void CharSelectAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CharSelectAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CharSelectAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CharSelectAck_descriptor_;
}

const CharSelectAck& CharSelectAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

CharSelectAck* CharSelectAck::default_instance_ = NULL;

CharSelectAck* CharSelectAck::New(::google::protobuf::Arena* arena) const {
  CharSelectAck* n = new CharSelectAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CharSelectAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.CharSelectAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CharSelectAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CharSelectAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(userid_, result_);

#undef ZR_HELPER_
#undef ZR_

}

bool CharSelectAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.CharSelectAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool IsNewChar = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isnewchar_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_UserID;
        break;
      }

      // optional int64 UserID = 2;
      case 2: {
        if (tag == 16) {
         parse_UserID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ActorID;
        break;
      }

      // optional int64 ActorID = 3;
      case 3: {
        if (tag == 24) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ZoneID;
        break;
      }

      // optional int32 ZoneID = 4;
      case 4: {
        if (tag == 32) {
         parse_ZoneID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zoneid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Result;
        break;
      }

      // optional .packets.ResultType Result = 5;
      case 5: {
        if (tag == 40) {
         parse_Result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::packets::ResultType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.CharSelectAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.CharSelectAck)
  return false;
#undef DO_
}

void CharSelectAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.CharSelectAck)
  // optional bool IsNewChar = 1;
  if (this->isnewchar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isnewchar(), output);
  }

  // optional int64 UserID = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->userid(), output);
  }

  // optional int64 ActorID = 3;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->actorid(), output);
  }

  // optional int32 ZoneID = 4;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->zoneid(), output);
  }

  // optional .packets.ResultType Result = 5;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.CharSelectAck)
}

::google::protobuf::uint8* CharSelectAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.CharSelectAck)
  // optional bool IsNewChar = 1;
  if (this->isnewchar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isnewchar(), target);
  }

  // optional int64 UserID = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->userid(), target);
  }

  // optional int64 ActorID = 3;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->actorid(), target);
  }

  // optional int32 ZoneID = 4;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->zoneid(), target);
  }

  // optional .packets.ResultType Result = 5;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.CharSelectAck)
  return target;
}

int CharSelectAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.CharSelectAck)
  int total_size = 0;

  // optional bool IsNewChar = 1;
  if (this->isnewchar() != 0) {
    total_size += 1 + 1;
  }

  // optional int64 UserID = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  // optional int64 ActorID = 3;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->actorid());
  }

  // optional int32 ZoneID = 4;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zoneid());
  }

  // optional .packets.ResultType Result = 5;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CharSelectAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.CharSelectAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CharSelectAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CharSelectAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.CharSelectAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.CharSelectAck)
    MergeFrom(*source);
  }
}

void CharSelectAck::MergeFrom(const CharSelectAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.CharSelectAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.isnewchar() != 0) {
    set_isnewchar(from.isnewchar());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CharSelectAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.CharSelectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharSelectAck::CopyFrom(const CharSelectAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.CharSelectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharSelectAck::IsInitialized() const {

  return true;
}

void CharSelectAck::Swap(CharSelectAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharSelectAck::InternalSwap(CharSelectAck* other) {
  std::swap(isnewchar_, other->isnewchar_);
  std::swap(userid_, other->userid_);
  std::swap(actorid_, other->actorid_);
  std::swap(zoneid_, other->zoneid_);
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CharSelectAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CharSelectAck_descriptor_;
  metadata.reflection = CharSelectAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CharSelectAck

// optional bool IsNewChar = 1;
void CharSelectAck::clear_isnewchar() {
  isnewchar_ = false;
}
 bool CharSelectAck::isnewchar() const {
  // @@protoc_insertion_point(field_get:packets.CharSelectAck.IsNewChar)
  return isnewchar_;
}
 void CharSelectAck::set_isnewchar(bool value) {
  
  isnewchar_ = value;
  // @@protoc_insertion_point(field_set:packets.CharSelectAck.IsNewChar)
}

// optional int64 UserID = 2;
void CharSelectAck::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 CharSelectAck::userid() const {
  // @@protoc_insertion_point(field_get:packets.CharSelectAck.UserID)
  return userid_;
}
 void CharSelectAck::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:packets.CharSelectAck.UserID)
}

// optional int64 ActorID = 3;
void CharSelectAck::clear_actorid() {
  actorid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 CharSelectAck::actorid() const {
  // @@protoc_insertion_point(field_get:packets.CharSelectAck.ActorID)
  return actorid_;
}
 void CharSelectAck::set_actorid(::google::protobuf::int64 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:packets.CharSelectAck.ActorID)
}

// optional int32 ZoneID = 4;
void CharSelectAck::clear_zoneid() {
  zoneid_ = 0;
}
 ::google::protobuf::int32 CharSelectAck::zoneid() const {
  // @@protoc_insertion_point(field_get:packets.CharSelectAck.ZoneID)
  return zoneid_;
}
 void CharSelectAck::set_zoneid(::google::protobuf::int32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:packets.CharSelectAck.ZoneID)
}

// optional .packets.ResultType Result = 5;
void CharSelectAck::clear_result() {
  result_ = 0;
}
 ::packets::ResultType CharSelectAck::result() const {
  // @@protoc_insertion_point(field_get:packets.CharSelectAck.Result)
  return static_cast< ::packets::ResultType >(result_);
}
 void CharSelectAck::set_result(::packets::ResultType value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packets.CharSelectAck.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZoneMoveReq::kZoneIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZoneMoveReq::ZoneMoveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.ZoneMoveReq)
}

void ZoneMoveReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ZoneMoveReq::ZoneMoveReq(const ZoneMoveReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.ZoneMoveReq)
}

void ZoneMoveReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  zoneid_ = 0;
}

ZoneMoveReq::~ZoneMoveReq() {
  // @@protoc_insertion_point(destructor:packets.ZoneMoveReq)
  SharedDtor();
}

void ZoneMoveReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ZoneMoveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZoneMoveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZoneMoveReq_descriptor_;
}

const ZoneMoveReq& ZoneMoveReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

ZoneMoveReq* ZoneMoveReq::default_instance_ = NULL;

ZoneMoveReq* ZoneMoveReq::New(::google::protobuf::Arena* arena) const {
  ZoneMoveReq* n = new ZoneMoveReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZoneMoveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.ZoneMoveReq)
  zoneid_ = 0;
}

bool ZoneMoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.ZoneMoveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ZoneID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zoneid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.ZoneMoveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.ZoneMoveReq)
  return false;
#undef DO_
}

void ZoneMoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.ZoneMoveReq)
  // optional int32 ZoneID = 1;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->zoneid(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.ZoneMoveReq)
}

::google::protobuf::uint8* ZoneMoveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.ZoneMoveReq)
  // optional int32 ZoneID = 1;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->zoneid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.ZoneMoveReq)
  return target;
}

int ZoneMoveReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.ZoneMoveReq)
  int total_size = 0;

  // optional int32 ZoneID = 1;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zoneid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZoneMoveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.ZoneMoveReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZoneMoveReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZoneMoveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.ZoneMoveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.ZoneMoveReq)
    MergeFrom(*source);
  }
}

void ZoneMoveReq::MergeFrom(const ZoneMoveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.ZoneMoveReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void ZoneMoveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.ZoneMoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZoneMoveReq::CopyFrom(const ZoneMoveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.ZoneMoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoneMoveReq::IsInitialized() const {

  return true;
}

void ZoneMoveReq::Swap(ZoneMoveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZoneMoveReq::InternalSwap(ZoneMoveReq* other) {
  std::swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZoneMoveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZoneMoveReq_descriptor_;
  metadata.reflection = ZoneMoveReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZoneMoveReq

// optional int32 ZoneID = 1;
void ZoneMoveReq::clear_zoneid() {
  zoneid_ = 0;
}
 ::google::protobuf::int32 ZoneMoveReq::zoneid() const {
  // @@protoc_insertion_point(field_get:packets.ZoneMoveReq.ZoneID)
  return zoneid_;
}
 void ZoneMoveReq::set_zoneid(::google::protobuf::int32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:packets.ZoneMoveReq.ZoneID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZoneMoveAck::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZoneMoveAck::ZoneMoveAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.ZoneMoveAck)
}

void ZoneMoveAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ZoneMoveAck::ZoneMoveAck(const ZoneMoveAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.ZoneMoveAck)
}

void ZoneMoveAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
}

ZoneMoveAck::~ZoneMoveAck() {
  // @@protoc_insertion_point(destructor:packets.ZoneMoveAck)
  SharedDtor();
}

void ZoneMoveAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ZoneMoveAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZoneMoveAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZoneMoveAck_descriptor_;
}

const ZoneMoveAck& ZoneMoveAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

ZoneMoveAck* ZoneMoveAck::default_instance_ = NULL;

ZoneMoveAck* ZoneMoveAck::New(::google::protobuf::Arena* arena) const {
  ZoneMoveAck* n = new ZoneMoveAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZoneMoveAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.ZoneMoveAck)
  result_ = 0;
}

bool ZoneMoveAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.ZoneMoveAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .packets.ResultType Result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::packets::ResultType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.ZoneMoveAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.ZoneMoveAck)
  return false;
#undef DO_
}

void ZoneMoveAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.ZoneMoveAck)
  // optional .packets.ResultType Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.ZoneMoveAck)
}

::google::protobuf::uint8* ZoneMoveAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.ZoneMoveAck)
  // optional .packets.ResultType Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.ZoneMoveAck)
  return target;
}

int ZoneMoveAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.ZoneMoveAck)
  int total_size = 0;

  // optional .packets.ResultType Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZoneMoveAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.ZoneMoveAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ZoneMoveAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ZoneMoveAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.ZoneMoveAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.ZoneMoveAck)
    MergeFrom(*source);
  }
}

void ZoneMoveAck::MergeFrom(const ZoneMoveAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.ZoneMoveAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ZoneMoveAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.ZoneMoveAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZoneMoveAck::CopyFrom(const ZoneMoveAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.ZoneMoveAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZoneMoveAck::IsInitialized() const {

  return true;
}

void ZoneMoveAck::Swap(ZoneMoveAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZoneMoveAck::InternalSwap(ZoneMoveAck* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZoneMoveAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZoneMoveAck_descriptor_;
  metadata.reflection = ZoneMoveAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZoneMoveAck

// optional .packets.ResultType Result = 1;
void ZoneMoveAck::clear_result() {
  result_ = 0;
}
 ::packets::ResultType ZoneMoveAck::result() const {
  // @@protoc_insertion_point(field_get:packets.ZoneMoveAck.Result)
  return static_cast< ::packets::ResultType >(result_);
}
 void ZoneMoveAck::set_result(::packets::ResultType value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:packets.ZoneMoveAck.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingReq::PingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.PingReq)
}

void PingReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PingReq::PingReq(const PingReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.PingReq)
}

void PingReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PingReq::~PingReq() {
  // @@protoc_insertion_point(destructor:packets.PingReq)
  SharedDtor();
}

void PingReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingReq_descriptor_;
}

const PingReq& PingReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

PingReq* PingReq::default_instance_ = NULL;

PingReq* PingReq::New(::google::protobuf::Arena* arena) const {
  PingReq* n = new PingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.PingReq)
}

bool PingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.PingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:packets.PingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.PingReq)
  return false;
#undef DO_
}

void PingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.PingReq)
  // @@protoc_insertion_point(serialize_end:packets.PingReq)
}

::google::protobuf::uint8* PingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.PingReq)
  // @@protoc_insertion_point(serialize_to_array_end:packets.PingReq)
  return target;
}

int PingReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.PingReq)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.PingReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PingReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.PingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.PingReq)
    MergeFrom(*source);
  }
}

void PingReq::MergeFrom(const PingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.PingReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void PingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.PingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingReq::CopyFrom(const PingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.PingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingReq::IsInitialized() const {

  return true;
}

void PingReq::Swap(PingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingReq::InternalSwap(PingReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PingReq_descriptor_;
  metadata.reflection = PingReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDispatchReq_UpdateGold_GoldData::kMoneyTypeFieldNumber;
const int UpdateDispatchReq_UpdateGold_GoldData::kAddFieldNumber;
const int UpdateDispatchReq_UpdateGold_GoldData::kTotalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDispatchReq_UpdateGold_GoldData::UpdateDispatchReq_UpdateGold_GoldData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.UpdateDispatchReq.UpdateGold.GoldData)
}

void UpdateDispatchReq_UpdateGold_GoldData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UpdateDispatchReq_UpdateGold_GoldData::UpdateDispatchReq_UpdateGold_GoldData(const UpdateDispatchReq_UpdateGold_GoldData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.UpdateDispatchReq.UpdateGold.GoldData)
}

void UpdateDispatchReq_UpdateGold_GoldData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  moneytype_ = 0;
  add_ = GOOGLE_LONGLONG(0);
  total_ = GOOGLE_LONGLONG(0);
}

UpdateDispatchReq_UpdateGold_GoldData::~UpdateDispatchReq_UpdateGold_GoldData() {
  // @@protoc_insertion_point(destructor:packets.UpdateDispatchReq.UpdateGold.GoldData)
  SharedDtor();
}

void UpdateDispatchReq_UpdateGold_GoldData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateDispatchReq_UpdateGold_GoldData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateDispatchReq_UpdateGold_GoldData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateDispatchReq_UpdateGold_GoldData_descriptor_;
}

const UpdateDispatchReq_UpdateGold_GoldData& UpdateDispatchReq_UpdateGold_GoldData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

UpdateDispatchReq_UpdateGold_GoldData* UpdateDispatchReq_UpdateGold_GoldData::default_instance_ = NULL;

UpdateDispatchReq_UpdateGold_GoldData* UpdateDispatchReq_UpdateGold_GoldData::New(::google::protobuf::Arena* arena) const {
  UpdateDispatchReq_UpdateGold_GoldData* n = new UpdateDispatchReq_UpdateGold_GoldData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateDispatchReq_UpdateGold_GoldData::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.UpdateDispatchReq.UpdateGold.GoldData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UpdateDispatchReq_UpdateGold_GoldData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UpdateDispatchReq_UpdateGold_GoldData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(add_, moneytype_);

#undef ZR_HELPER_
#undef ZR_

}

bool UpdateDispatchReq_UpdateGold_GoldData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.UpdateDispatchReq.UpdateGold.GoldData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 MoneyType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &moneytype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Add;
        break;
      }

      // optional int64 Add = 2;
      case 2: {
        if (tag == 16) {
         parse_Add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &add_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Total;
        break;
      }

      // optional int64 Total = 3;
      case 3: {
        if (tag == 24) {
         parse_Total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.UpdateDispatchReq.UpdateGold.GoldData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.UpdateDispatchReq.UpdateGold.GoldData)
  return false;
#undef DO_
}

void UpdateDispatchReq_UpdateGold_GoldData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.UpdateDispatchReq.UpdateGold.GoldData)
  // optional int32 MoneyType = 1;
  if (this->moneytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->moneytype(), output);
  }

  // optional int64 Add = 2;
  if (this->add() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->add(), output);
  }

  // optional int64 Total = 3;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->total(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.UpdateDispatchReq.UpdateGold.GoldData)
}

::google::protobuf::uint8* UpdateDispatchReq_UpdateGold_GoldData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.UpdateDispatchReq.UpdateGold.GoldData)
  // optional int32 MoneyType = 1;
  if (this->moneytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->moneytype(), target);
  }

  // optional int64 Add = 2;
  if (this->add() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->add(), target);
  }

  // optional int64 Total = 3;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->total(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.UpdateDispatchReq.UpdateGold.GoldData)
  return target;
}

int UpdateDispatchReq_UpdateGold_GoldData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.UpdateDispatchReq.UpdateGold.GoldData)
  int total_size = 0;

  // optional int32 MoneyType = 1;
  if (this->moneytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->moneytype());
  }

  // optional int64 Add = 2;
  if (this->add() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->add());
  }

  // optional int64 Total = 3;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateDispatchReq_UpdateGold_GoldData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.UpdateDispatchReq.UpdateGold.GoldData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateDispatchReq_UpdateGold_GoldData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDispatchReq_UpdateGold_GoldData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.UpdateDispatchReq.UpdateGold.GoldData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.UpdateDispatchReq.UpdateGold.GoldData)
    MergeFrom(*source);
  }
}

void UpdateDispatchReq_UpdateGold_GoldData::MergeFrom(const UpdateDispatchReq_UpdateGold_GoldData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.UpdateDispatchReq.UpdateGold.GoldData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.moneytype() != 0) {
    set_moneytype(from.moneytype());
  }
  if (from.add() != 0) {
    set_add(from.add());
  }
  if (from.total() != 0) {
    set_total(from.total());
  }
}

void UpdateDispatchReq_UpdateGold_GoldData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.UpdateDispatchReq.UpdateGold.GoldData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDispatchReq_UpdateGold_GoldData::CopyFrom(const UpdateDispatchReq_UpdateGold_GoldData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.UpdateDispatchReq.UpdateGold.GoldData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDispatchReq_UpdateGold_GoldData::IsInitialized() const {

  return true;
}

void UpdateDispatchReq_UpdateGold_GoldData::Swap(UpdateDispatchReq_UpdateGold_GoldData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDispatchReq_UpdateGold_GoldData::InternalSwap(UpdateDispatchReq_UpdateGold_GoldData* other) {
  std::swap(moneytype_, other->moneytype_);
  std::swap(add_, other->add_);
  std::swap(total_, other->total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateDispatchReq_UpdateGold_GoldData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateDispatchReq_UpdateGold_GoldData_descriptor_;
  metadata.reflection = UpdateDispatchReq_UpdateGold_GoldData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDispatchReq_UpdateGold::kGoldListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDispatchReq_UpdateGold::UpdateDispatchReq_UpdateGold()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.UpdateDispatchReq.UpdateGold)
}

void UpdateDispatchReq_UpdateGold::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UpdateDispatchReq_UpdateGold::UpdateDispatchReq_UpdateGold(const UpdateDispatchReq_UpdateGold& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.UpdateDispatchReq.UpdateGold)
}

void UpdateDispatchReq_UpdateGold::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UpdateDispatchReq_UpdateGold::~UpdateDispatchReq_UpdateGold() {
  // @@protoc_insertion_point(destructor:packets.UpdateDispatchReq.UpdateGold)
  SharedDtor();
}

void UpdateDispatchReq_UpdateGold::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateDispatchReq_UpdateGold::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateDispatchReq_UpdateGold::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateDispatchReq_UpdateGold_descriptor_;
}

const UpdateDispatchReq_UpdateGold& UpdateDispatchReq_UpdateGold::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

UpdateDispatchReq_UpdateGold* UpdateDispatchReq_UpdateGold::default_instance_ = NULL;

UpdateDispatchReq_UpdateGold* UpdateDispatchReq_UpdateGold::New(::google::protobuf::Arena* arena) const {
  UpdateDispatchReq_UpdateGold* n = new UpdateDispatchReq_UpdateGold;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateDispatchReq_UpdateGold::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.UpdateDispatchReq.UpdateGold)
  goldlist_.Clear();
}

bool UpdateDispatchReq_UpdateGold::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.UpdateDispatchReq.UpdateGold)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .packets.UpdateDispatchReq.UpdateGold.GoldData GoldList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_GoldList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_goldlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_GoldList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.UpdateDispatchReq.UpdateGold)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.UpdateDispatchReq.UpdateGold)
  return false;
#undef DO_
}

void UpdateDispatchReq_UpdateGold::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.UpdateDispatchReq.UpdateGold)
  // repeated .packets.UpdateDispatchReq.UpdateGold.GoldData GoldList = 1;
  for (unsigned int i = 0, n = this->goldlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goldlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.UpdateDispatchReq.UpdateGold)
}

::google::protobuf::uint8* UpdateDispatchReq_UpdateGold::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.UpdateDispatchReq.UpdateGold)
  // repeated .packets.UpdateDispatchReq.UpdateGold.GoldData GoldList = 1;
  for (unsigned int i = 0, n = this->goldlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->goldlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.UpdateDispatchReq.UpdateGold)
  return target;
}

int UpdateDispatchReq_UpdateGold::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.UpdateDispatchReq.UpdateGold)
  int total_size = 0;

  // repeated .packets.UpdateDispatchReq.UpdateGold.GoldData GoldList = 1;
  total_size += 1 * this->goldlist_size();
  for (int i = 0; i < this->goldlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goldlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateDispatchReq_UpdateGold::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.UpdateDispatchReq.UpdateGold)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateDispatchReq_UpdateGold* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDispatchReq_UpdateGold>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.UpdateDispatchReq.UpdateGold)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.UpdateDispatchReq.UpdateGold)
    MergeFrom(*source);
  }
}

void UpdateDispatchReq_UpdateGold::MergeFrom(const UpdateDispatchReq_UpdateGold& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.UpdateDispatchReq.UpdateGold)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  goldlist_.MergeFrom(from.goldlist_);
}

void UpdateDispatchReq_UpdateGold::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.UpdateDispatchReq.UpdateGold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDispatchReq_UpdateGold::CopyFrom(const UpdateDispatchReq_UpdateGold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.UpdateDispatchReq.UpdateGold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDispatchReq_UpdateGold::IsInitialized() const {

  return true;
}

void UpdateDispatchReq_UpdateGold::Swap(UpdateDispatchReq_UpdateGold* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDispatchReq_UpdateGold::InternalSwap(UpdateDispatchReq_UpdateGold* other) {
  goldlist_.UnsafeArenaSwap(&other->goldlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateDispatchReq_UpdateGold::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateDispatchReq_UpdateGold_descriptor_;
  metadata.reflection = UpdateDispatchReq_UpdateGold_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDispatchReq_UpdateItem_ItemData::kSerialIdFieldNumber;
const int UpdateDispatchReq_UpdateItem_ItemData::kDurabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDispatchReq_UpdateItem_ItemData::UpdateDispatchReq_UpdateItem_ItemData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.UpdateDispatchReq.UpdateItem.ItemData)
}

void UpdateDispatchReq_UpdateItem_ItemData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UpdateDispatchReq_UpdateItem_ItemData::UpdateDispatchReq_UpdateItem_ItemData(const UpdateDispatchReq_UpdateItem_ItemData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.UpdateDispatchReq.UpdateItem.ItemData)
}

void UpdateDispatchReq_UpdateItem_ItemData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  serialid_ = GOOGLE_LONGLONG(0);
  durability_ = 0;
}

UpdateDispatchReq_UpdateItem_ItemData::~UpdateDispatchReq_UpdateItem_ItemData() {
  // @@protoc_insertion_point(destructor:packets.UpdateDispatchReq.UpdateItem.ItemData)
  SharedDtor();
}

void UpdateDispatchReq_UpdateItem_ItemData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateDispatchReq_UpdateItem_ItemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateDispatchReq_UpdateItem_ItemData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateDispatchReq_UpdateItem_ItemData_descriptor_;
}

const UpdateDispatchReq_UpdateItem_ItemData& UpdateDispatchReq_UpdateItem_ItemData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

UpdateDispatchReq_UpdateItem_ItemData* UpdateDispatchReq_UpdateItem_ItemData::default_instance_ = NULL;

UpdateDispatchReq_UpdateItem_ItemData* UpdateDispatchReq_UpdateItem_ItemData::New(::google::protobuf::Arena* arena) const {
  UpdateDispatchReq_UpdateItem_ItemData* n = new UpdateDispatchReq_UpdateItem_ItemData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateDispatchReq_UpdateItem_ItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.UpdateDispatchReq.UpdateItem.ItemData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UpdateDispatchReq_UpdateItem_ItemData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UpdateDispatchReq_UpdateItem_ItemData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(serialid_, durability_);

#undef ZR_HELPER_
#undef ZR_

}

bool UpdateDispatchReq_UpdateItem_ItemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.UpdateDispatchReq.UpdateItem.ItemData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 SerialId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Durability;
        break;
      }

      // optional int32 Durability = 2;
      case 2: {
        if (tag == 16) {
         parse_Durability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &durability_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.UpdateDispatchReq.UpdateItem.ItemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.UpdateDispatchReq.UpdateItem.ItemData)
  return false;
#undef DO_
}

void UpdateDispatchReq_UpdateItem_ItemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.UpdateDispatchReq.UpdateItem.ItemData)
  // optional int64 SerialId = 1;
  if (this->serialid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serialid(), output);
  }

  // optional int32 Durability = 2;
  if (this->durability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->durability(), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.UpdateDispatchReq.UpdateItem.ItemData)
}

::google::protobuf::uint8* UpdateDispatchReq_UpdateItem_ItemData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.UpdateDispatchReq.UpdateItem.ItemData)
  // optional int64 SerialId = 1;
  if (this->serialid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serialid(), target);
  }

  // optional int32 Durability = 2;
  if (this->durability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->durability(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.UpdateDispatchReq.UpdateItem.ItemData)
  return target;
}

int UpdateDispatchReq_UpdateItem_ItemData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.UpdateDispatchReq.UpdateItem.ItemData)
  int total_size = 0;

  // optional int64 SerialId = 1;
  if (this->serialid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->serialid());
  }

  // optional int32 Durability = 2;
  if (this->durability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->durability());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateDispatchReq_UpdateItem_ItemData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.UpdateDispatchReq.UpdateItem.ItemData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateDispatchReq_UpdateItem_ItemData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDispatchReq_UpdateItem_ItemData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.UpdateDispatchReq.UpdateItem.ItemData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.UpdateDispatchReq.UpdateItem.ItemData)
    MergeFrom(*source);
  }
}

void UpdateDispatchReq_UpdateItem_ItemData::MergeFrom(const UpdateDispatchReq_UpdateItem_ItemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.UpdateDispatchReq.UpdateItem.ItemData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.serialid() != 0) {
    set_serialid(from.serialid());
  }
  if (from.durability() != 0) {
    set_durability(from.durability());
  }
}

void UpdateDispatchReq_UpdateItem_ItemData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.UpdateDispatchReq.UpdateItem.ItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDispatchReq_UpdateItem_ItemData::CopyFrom(const UpdateDispatchReq_UpdateItem_ItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.UpdateDispatchReq.UpdateItem.ItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDispatchReq_UpdateItem_ItemData::IsInitialized() const {

  return true;
}

void UpdateDispatchReq_UpdateItem_ItemData::Swap(UpdateDispatchReq_UpdateItem_ItemData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDispatchReq_UpdateItem_ItemData::InternalSwap(UpdateDispatchReq_UpdateItem_ItemData* other) {
  std::swap(serialid_, other->serialid_);
  std::swap(durability_, other->durability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateDispatchReq_UpdateItem_ItemData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateDispatchReq_UpdateItem_ItemData_descriptor_;
  metadata.reflection = UpdateDispatchReq_UpdateItem_ItemData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDispatchReq_UpdateItem::kAddListFieldNumber;
const int UpdateDispatchReq_UpdateItem::kDeleteListFieldNumber;
const int UpdateDispatchReq_UpdateItem::kUpdateListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDispatchReq_UpdateItem::UpdateDispatchReq_UpdateItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.UpdateDispatchReq.UpdateItem)
}

void UpdateDispatchReq_UpdateItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UpdateDispatchReq_UpdateItem::UpdateDispatchReq_UpdateItem(const UpdateDispatchReq_UpdateItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.UpdateDispatchReq.UpdateItem)
}

void UpdateDispatchReq_UpdateItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UpdateDispatchReq_UpdateItem::~UpdateDispatchReq_UpdateItem() {
  // @@protoc_insertion_point(destructor:packets.UpdateDispatchReq.UpdateItem)
  SharedDtor();
}

void UpdateDispatchReq_UpdateItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateDispatchReq_UpdateItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateDispatchReq_UpdateItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateDispatchReq_UpdateItem_descriptor_;
}

const UpdateDispatchReq_UpdateItem& UpdateDispatchReq_UpdateItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

UpdateDispatchReq_UpdateItem* UpdateDispatchReq_UpdateItem::default_instance_ = NULL;

UpdateDispatchReq_UpdateItem* UpdateDispatchReq_UpdateItem::New(::google::protobuf::Arena* arena) const {
  UpdateDispatchReq_UpdateItem* n = new UpdateDispatchReq_UpdateItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateDispatchReq_UpdateItem::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.UpdateDispatchReq.UpdateItem)
  addlist_.Clear();
  deletelist_.Clear();
  updatelist_.Clear();
}

bool UpdateDispatchReq_UpdateItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.UpdateDispatchReq.UpdateItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData AddList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_AddList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_addlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_AddList;
        if (input->ExpectTag(18)) goto parse_loop_DeleteList;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData DeleteList = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_DeleteList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_deletelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_DeleteList;
        if (input->ExpectTag(26)) goto parse_loop_UpdateList;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData UpdateList = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_UpdateList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_updatelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_UpdateList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.UpdateDispatchReq.UpdateItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.UpdateDispatchReq.UpdateItem)
  return false;
#undef DO_
}

void UpdateDispatchReq_UpdateItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.UpdateDispatchReq.UpdateItem)
  // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData AddList = 1;
  for (unsigned int i = 0, n = this->addlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->addlist(i), output);
  }

  // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData DeleteList = 2;
  for (unsigned int i = 0, n = this->deletelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->deletelist(i), output);
  }

  // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData UpdateList = 3;
  for (unsigned int i = 0, n = this->updatelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->updatelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.UpdateDispatchReq.UpdateItem)
}

::google::protobuf::uint8* UpdateDispatchReq_UpdateItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.UpdateDispatchReq.UpdateItem)
  // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData AddList = 1;
  for (unsigned int i = 0, n = this->addlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->addlist(i), false, target);
  }

  // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData DeleteList = 2;
  for (unsigned int i = 0, n = this->deletelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->deletelist(i), false, target);
  }

  // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData UpdateList = 3;
  for (unsigned int i = 0, n = this->updatelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->updatelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.UpdateDispatchReq.UpdateItem)
  return target;
}

int UpdateDispatchReq_UpdateItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.UpdateDispatchReq.UpdateItem)
  int total_size = 0;

  // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData AddList = 1;
  total_size += 1 * this->addlist_size();
  for (int i = 0; i < this->addlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->addlist(i));
  }

  // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData DeleteList = 2;
  total_size += 1 * this->deletelist_size();
  for (int i = 0; i < this->deletelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->deletelist(i));
  }

  // repeated .packets.UpdateDispatchReq.UpdateItem.ItemData UpdateList = 3;
  total_size += 1 * this->updatelist_size();
  for (int i = 0; i < this->updatelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->updatelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateDispatchReq_UpdateItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.UpdateDispatchReq.UpdateItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateDispatchReq_UpdateItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDispatchReq_UpdateItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.UpdateDispatchReq.UpdateItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.UpdateDispatchReq.UpdateItem)
    MergeFrom(*source);
  }
}

void UpdateDispatchReq_UpdateItem::MergeFrom(const UpdateDispatchReq_UpdateItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.UpdateDispatchReq.UpdateItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  addlist_.MergeFrom(from.addlist_);
  deletelist_.MergeFrom(from.deletelist_);
  updatelist_.MergeFrom(from.updatelist_);
}

void UpdateDispatchReq_UpdateItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.UpdateDispatchReq.UpdateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDispatchReq_UpdateItem::CopyFrom(const UpdateDispatchReq_UpdateItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.UpdateDispatchReq.UpdateItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDispatchReq_UpdateItem::IsInitialized() const {

  return true;
}

void UpdateDispatchReq_UpdateItem::Swap(UpdateDispatchReq_UpdateItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDispatchReq_UpdateItem::InternalSwap(UpdateDispatchReq_UpdateItem* other) {
  addlist_.UnsafeArenaSwap(&other->addlist_);
  deletelist_.UnsafeArenaSwap(&other->deletelist_);
  updatelist_.UnsafeArenaSwap(&other->updatelist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateDispatchReq_UpdateItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateDispatchReq_UpdateItem_descriptor_;
  metadata.reflection = UpdateDispatchReq_UpdateItem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDispatchReq::kUserIDFieldNumber;
const int UpdateDispatchReq::kGoldListFieldNumber;
const int UpdateDispatchReq::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDispatchReq::UpdateDispatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.UpdateDispatchReq)
}

void UpdateDispatchReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UpdateDispatchReq::UpdateDispatchReq(const UpdateDispatchReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.UpdateDispatchReq)
}

void UpdateDispatchReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  userid_ = GOOGLE_LONGLONG(0);
}

UpdateDispatchReq::~UpdateDispatchReq() {
  // @@protoc_insertion_point(destructor:packets.UpdateDispatchReq)
  SharedDtor();
}

void UpdateDispatchReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateDispatchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateDispatchReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateDispatchReq_descriptor_;
}

const UpdateDispatchReq& UpdateDispatchReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

UpdateDispatchReq* UpdateDispatchReq::default_instance_ = NULL;

UpdateDispatchReq* UpdateDispatchReq::New(::google::protobuf::Arena* arena) const {
  UpdateDispatchReq* n = new UpdateDispatchReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateDispatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.UpdateDispatchReq)
  userid_ = GOOGLE_LONGLONG(0);
  goldlist_.Clear();
  itemlist_.Clear();
}

bool UpdateDispatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.UpdateDispatchReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 UserID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_GoldList;
        break;
      }

      // repeated .packets.UpdateDispatchReq.UpdateGold GoldList = 2;
      case 2: {
        if (tag == 18) {
         parse_GoldList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_GoldList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_goldlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_GoldList;
        if (input->ExpectTag(26)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .packets.UpdateDispatchReq.UpdateItem ItemList = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packets.UpdateDispatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.UpdateDispatchReq)
  return false;
#undef DO_
}

void UpdateDispatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.UpdateDispatchReq)
  // optional int64 UserID = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->userid(), output);
  }

  // repeated .packets.UpdateDispatchReq.UpdateGold GoldList = 2;
  for (unsigned int i = 0, n = this->goldlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->goldlist(i), output);
  }

  // repeated .packets.UpdateDispatchReq.UpdateItem ItemList = 3;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->itemlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:packets.UpdateDispatchReq)
}

::google::protobuf::uint8* UpdateDispatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.UpdateDispatchReq)
  // optional int64 UserID = 1;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->userid(), target);
  }

  // repeated .packets.UpdateDispatchReq.UpdateGold GoldList = 2;
  for (unsigned int i = 0, n = this->goldlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->goldlist(i), false, target);
  }

  // repeated .packets.UpdateDispatchReq.UpdateItem ItemList = 3;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->itemlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:packets.UpdateDispatchReq)
  return target;
}

int UpdateDispatchReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.UpdateDispatchReq)
  int total_size = 0;

  // optional int64 UserID = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->userid());
  }

  // repeated .packets.UpdateDispatchReq.UpdateGold GoldList = 2;
  total_size += 1 * this->goldlist_size();
  for (int i = 0; i < this->goldlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goldlist(i));
  }

  // repeated .packets.UpdateDispatchReq.UpdateItem ItemList = 3;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateDispatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.UpdateDispatchReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UpdateDispatchReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDispatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.UpdateDispatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.UpdateDispatchReq)
    MergeFrom(*source);
  }
}

void UpdateDispatchReq::MergeFrom(const UpdateDispatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.UpdateDispatchReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  goldlist_.MergeFrom(from.goldlist_);
  itemlist_.MergeFrom(from.itemlist_);
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void UpdateDispatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.UpdateDispatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDispatchReq::CopyFrom(const UpdateDispatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.UpdateDispatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDispatchReq::IsInitialized() const {

  return true;
}

void UpdateDispatchReq::Swap(UpdateDispatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDispatchReq::InternalSwap(UpdateDispatchReq* other) {
  std::swap(userid_, other->userid_);
  goldlist_.UnsafeArenaSwap(&other->goldlist_);
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateDispatchReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateDispatchReq_descriptor_;
  metadata.reflection = UpdateDispatchReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateDispatchReq_UpdateGold_GoldData

// optional int32 MoneyType = 1;
void UpdateDispatchReq_UpdateGold_GoldData::clear_moneytype() {
  moneytype_ = 0;
}
 ::google::protobuf::int32 UpdateDispatchReq_UpdateGold_GoldData::moneytype() const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UpdateGold.GoldData.MoneyType)
  return moneytype_;
}
 void UpdateDispatchReq_UpdateGold_GoldData::set_moneytype(::google::protobuf::int32 value) {
  
  moneytype_ = value;
  // @@protoc_insertion_point(field_set:packets.UpdateDispatchReq.UpdateGold.GoldData.MoneyType)
}

// optional int64 Add = 2;
void UpdateDispatchReq_UpdateGold_GoldData::clear_add() {
  add_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UpdateDispatchReq_UpdateGold_GoldData::add() const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UpdateGold.GoldData.Add)
  return add_;
}
 void UpdateDispatchReq_UpdateGold_GoldData::set_add(::google::protobuf::int64 value) {
  
  add_ = value;
  // @@protoc_insertion_point(field_set:packets.UpdateDispatchReq.UpdateGold.GoldData.Add)
}

// optional int64 Total = 3;
void UpdateDispatchReq_UpdateGold_GoldData::clear_total() {
  total_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UpdateDispatchReq_UpdateGold_GoldData::total() const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UpdateGold.GoldData.Total)
  return total_;
}
 void UpdateDispatchReq_UpdateGold_GoldData::set_total(::google::protobuf::int64 value) {
  
  total_ = value;
  // @@protoc_insertion_point(field_set:packets.UpdateDispatchReq.UpdateGold.GoldData.Total)
}

// -------------------------------------------------------------------

// UpdateDispatchReq_UpdateGold

// repeated .packets.UpdateDispatchReq.UpdateGold.GoldData GoldList = 1;
int UpdateDispatchReq_UpdateGold::goldlist_size() const {
  return goldlist_.size();
}
void UpdateDispatchReq_UpdateGold::clear_goldlist() {
  goldlist_.Clear();
}
const ::packets::UpdateDispatchReq_UpdateGold_GoldData& UpdateDispatchReq_UpdateGold::goldlist(int index) const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UpdateGold.GoldList)
  return goldlist_.Get(index);
}
::packets::UpdateDispatchReq_UpdateGold_GoldData* UpdateDispatchReq_UpdateGold::mutable_goldlist(int index) {
  // @@protoc_insertion_point(field_mutable:packets.UpdateDispatchReq.UpdateGold.GoldList)
  return goldlist_.Mutable(index);
}
::packets::UpdateDispatchReq_UpdateGold_GoldData* UpdateDispatchReq_UpdateGold::add_goldlist() {
  // @@protoc_insertion_point(field_add:packets.UpdateDispatchReq.UpdateGold.GoldList)
  return goldlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateGold_GoldData >*
UpdateDispatchReq_UpdateGold::mutable_goldlist() {
  // @@protoc_insertion_point(field_mutable_list:packets.UpdateDispatchReq.UpdateGold.GoldList)
  return &goldlist_;
}
const ::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateGold_GoldData >&
UpdateDispatchReq_UpdateGold::goldlist() const {
  // @@protoc_insertion_point(field_list:packets.UpdateDispatchReq.UpdateGold.GoldList)
  return goldlist_;
}

// -------------------------------------------------------------------

// UpdateDispatchReq_UpdateItem_ItemData

// optional int64 SerialId = 1;
void UpdateDispatchReq_UpdateItem_ItemData::clear_serialid() {
  serialid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UpdateDispatchReq_UpdateItem_ItemData::serialid() const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UpdateItem.ItemData.SerialId)
  return serialid_;
}
 void UpdateDispatchReq_UpdateItem_ItemData::set_serialid(::google::protobuf::int64 value) {
  
  serialid_ = value;
  // @@protoc_insertion_point(field_set:packets.UpdateDispatchReq.UpdateItem.ItemData.SerialId)
}

// optional int32 Durability = 2;
void UpdateDispatchReq_UpdateItem_ItemData::clear_durability() {
  durability_ = 0;
}
 ::google::protobuf::int32 UpdateDispatchReq_UpdateItem_ItemData::durability() const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UpdateItem.ItemData.Durability)
  return durability_;
}
 void UpdateDispatchReq_UpdateItem_ItemData::set_durability(::google::protobuf::int32 value) {
  
  durability_ = value;
  // @@protoc_insertion_point(field_set:packets.UpdateDispatchReq.UpdateItem.ItemData.Durability)
}

// -------------------------------------------------------------------

// UpdateDispatchReq_UpdateItem

// repeated .packets.UpdateDispatchReq.UpdateItem.ItemData AddList = 1;
int UpdateDispatchReq_UpdateItem::addlist_size() const {
  return addlist_.size();
}
void UpdateDispatchReq_UpdateItem::clear_addlist() {
  addlist_.Clear();
}
const ::packets::UpdateDispatchReq_UpdateItem_ItemData& UpdateDispatchReq_UpdateItem::addlist(int index) const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UpdateItem.AddList)
  return addlist_.Get(index);
}
::packets::UpdateDispatchReq_UpdateItem_ItemData* UpdateDispatchReq_UpdateItem::mutable_addlist(int index) {
  // @@protoc_insertion_point(field_mutable:packets.UpdateDispatchReq.UpdateItem.AddList)
  return addlist_.Mutable(index);
}
::packets::UpdateDispatchReq_UpdateItem_ItemData* UpdateDispatchReq_UpdateItem::add_addlist() {
  // @@protoc_insertion_point(field_add:packets.UpdateDispatchReq.UpdateItem.AddList)
  return addlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateItem_ItemData >*
UpdateDispatchReq_UpdateItem::mutable_addlist() {
  // @@protoc_insertion_point(field_mutable_list:packets.UpdateDispatchReq.UpdateItem.AddList)
  return &addlist_;
}
const ::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateItem_ItemData >&
UpdateDispatchReq_UpdateItem::addlist() const {
  // @@protoc_insertion_point(field_list:packets.UpdateDispatchReq.UpdateItem.AddList)
  return addlist_;
}

// repeated .packets.UpdateDispatchReq.UpdateItem.ItemData DeleteList = 2;
int UpdateDispatchReq_UpdateItem::deletelist_size() const {
  return deletelist_.size();
}
void UpdateDispatchReq_UpdateItem::clear_deletelist() {
  deletelist_.Clear();
}
const ::packets::UpdateDispatchReq_UpdateItem_ItemData& UpdateDispatchReq_UpdateItem::deletelist(int index) const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UpdateItem.DeleteList)
  return deletelist_.Get(index);
}
::packets::UpdateDispatchReq_UpdateItem_ItemData* UpdateDispatchReq_UpdateItem::mutable_deletelist(int index) {
  // @@protoc_insertion_point(field_mutable:packets.UpdateDispatchReq.UpdateItem.DeleteList)
  return deletelist_.Mutable(index);
}
::packets::UpdateDispatchReq_UpdateItem_ItemData* UpdateDispatchReq_UpdateItem::add_deletelist() {
  // @@protoc_insertion_point(field_add:packets.UpdateDispatchReq.UpdateItem.DeleteList)
  return deletelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateItem_ItemData >*
UpdateDispatchReq_UpdateItem::mutable_deletelist() {
  // @@protoc_insertion_point(field_mutable_list:packets.UpdateDispatchReq.UpdateItem.DeleteList)
  return &deletelist_;
}
const ::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateItem_ItemData >&
UpdateDispatchReq_UpdateItem::deletelist() const {
  // @@protoc_insertion_point(field_list:packets.UpdateDispatchReq.UpdateItem.DeleteList)
  return deletelist_;
}

// repeated .packets.UpdateDispatchReq.UpdateItem.ItemData UpdateList = 3;
int UpdateDispatchReq_UpdateItem::updatelist_size() const {
  return updatelist_.size();
}
void UpdateDispatchReq_UpdateItem::clear_updatelist() {
  updatelist_.Clear();
}
const ::packets::UpdateDispatchReq_UpdateItem_ItemData& UpdateDispatchReq_UpdateItem::updatelist(int index) const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UpdateItem.UpdateList)
  return updatelist_.Get(index);
}
::packets::UpdateDispatchReq_UpdateItem_ItemData* UpdateDispatchReq_UpdateItem::mutable_updatelist(int index) {
  // @@protoc_insertion_point(field_mutable:packets.UpdateDispatchReq.UpdateItem.UpdateList)
  return updatelist_.Mutable(index);
}
::packets::UpdateDispatchReq_UpdateItem_ItemData* UpdateDispatchReq_UpdateItem::add_updatelist() {
  // @@protoc_insertion_point(field_add:packets.UpdateDispatchReq.UpdateItem.UpdateList)
  return updatelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateItem_ItemData >*
UpdateDispatchReq_UpdateItem::mutable_updatelist() {
  // @@protoc_insertion_point(field_mutable_list:packets.UpdateDispatchReq.UpdateItem.UpdateList)
  return &updatelist_;
}
const ::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateItem_ItemData >&
UpdateDispatchReq_UpdateItem::updatelist() const {
  // @@protoc_insertion_point(field_list:packets.UpdateDispatchReq.UpdateItem.UpdateList)
  return updatelist_;
}

// -------------------------------------------------------------------

// UpdateDispatchReq

// optional int64 UserID = 1;
void UpdateDispatchReq::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UpdateDispatchReq::userid() const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.UserID)
  return userid_;
}
 void UpdateDispatchReq::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:packets.UpdateDispatchReq.UserID)
}

// repeated .packets.UpdateDispatchReq.UpdateGold GoldList = 2;
int UpdateDispatchReq::goldlist_size() const {
  return goldlist_.size();
}
void UpdateDispatchReq::clear_goldlist() {
  goldlist_.Clear();
}
const ::packets::UpdateDispatchReq_UpdateGold& UpdateDispatchReq::goldlist(int index) const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.GoldList)
  return goldlist_.Get(index);
}
::packets::UpdateDispatchReq_UpdateGold* UpdateDispatchReq::mutable_goldlist(int index) {
  // @@protoc_insertion_point(field_mutable:packets.UpdateDispatchReq.GoldList)
  return goldlist_.Mutable(index);
}
::packets::UpdateDispatchReq_UpdateGold* UpdateDispatchReq::add_goldlist() {
  // @@protoc_insertion_point(field_add:packets.UpdateDispatchReq.GoldList)
  return goldlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateGold >*
UpdateDispatchReq::mutable_goldlist() {
  // @@protoc_insertion_point(field_mutable_list:packets.UpdateDispatchReq.GoldList)
  return &goldlist_;
}
const ::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateGold >&
UpdateDispatchReq::goldlist() const {
  // @@protoc_insertion_point(field_list:packets.UpdateDispatchReq.GoldList)
  return goldlist_;
}

// repeated .packets.UpdateDispatchReq.UpdateItem ItemList = 3;
int UpdateDispatchReq::itemlist_size() const {
  return itemlist_.size();
}
void UpdateDispatchReq::clear_itemlist() {
  itemlist_.Clear();
}
const ::packets::UpdateDispatchReq_UpdateItem& UpdateDispatchReq::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:packets.UpdateDispatchReq.ItemList)
  return itemlist_.Get(index);
}
::packets::UpdateDispatchReq_UpdateItem* UpdateDispatchReq::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:packets.UpdateDispatchReq.ItemList)
  return itemlist_.Mutable(index);
}
::packets::UpdateDispatchReq_UpdateItem* UpdateDispatchReq::add_itemlist() {
  // @@protoc_insertion_point(field_add:packets.UpdateDispatchReq.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateItem >*
UpdateDispatchReq::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:packets.UpdateDispatchReq.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::packets::UpdateDispatchReq_UpdateItem >&
UpdateDispatchReq::itemlist() const {
  // @@protoc_insertion_point(field_list:packets.UpdateDispatchReq.ItemList)
  return itemlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VSDisconnectReq::VSDisconnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.VSDisconnectReq)
}

void VSDisconnectReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

VSDisconnectReq::VSDisconnectReq(const VSDisconnectReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.VSDisconnectReq)
}

void VSDisconnectReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

VSDisconnectReq::~VSDisconnectReq() {
  // @@protoc_insertion_point(destructor:packets.VSDisconnectReq)
  SharedDtor();
}

void VSDisconnectReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VSDisconnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VSDisconnectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VSDisconnectReq_descriptor_;
}

const VSDisconnectReq& VSDisconnectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

VSDisconnectReq* VSDisconnectReq::default_instance_ = NULL;

VSDisconnectReq* VSDisconnectReq::New(::google::protobuf::Arena* arena) const {
  VSDisconnectReq* n = new VSDisconnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VSDisconnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.VSDisconnectReq)
}

bool VSDisconnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.VSDisconnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:packets.VSDisconnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.VSDisconnectReq)
  return false;
#undef DO_
}

void VSDisconnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.VSDisconnectReq)
  // @@protoc_insertion_point(serialize_end:packets.VSDisconnectReq)
}

::google::protobuf::uint8* VSDisconnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.VSDisconnectReq)
  // @@protoc_insertion_point(serialize_to_array_end:packets.VSDisconnectReq)
  return target;
}

int VSDisconnectReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.VSDisconnectReq)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VSDisconnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.VSDisconnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VSDisconnectReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VSDisconnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.VSDisconnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.VSDisconnectReq)
    MergeFrom(*source);
  }
}

void VSDisconnectReq::MergeFrom(const VSDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.VSDisconnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void VSDisconnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.VSDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VSDisconnectReq::CopyFrom(const VSDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.VSDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VSDisconnectReq::IsInitialized() const {

  return true;
}

void VSDisconnectReq::Swap(VSDisconnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VSDisconnectReq::InternalSwap(VSDisconnectReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VSDisconnectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VSDisconnectReq_descriptor_;
  metadata.reflection = VSDisconnectReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VSDisconnectReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VSDisconnectNotify::VSDisconnectNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:packets.VSDisconnectNotify)
}

void VSDisconnectNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

VSDisconnectNotify::VSDisconnectNotify(const VSDisconnectNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:packets.VSDisconnectNotify)
}

void VSDisconnectNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

VSDisconnectNotify::~VSDisconnectNotify() {
  // @@protoc_insertion_point(destructor:packets.VSDisconnectNotify)
  SharedDtor();
}

void VSDisconnectNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VSDisconnectNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VSDisconnectNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VSDisconnectNotify_descriptor_;
}

const VSDisconnectNotify& VSDisconnectNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sample_2eproto();
  return *default_instance_;
}

VSDisconnectNotify* VSDisconnectNotify::default_instance_ = NULL;

VSDisconnectNotify* VSDisconnectNotify::New(::google::protobuf::Arena* arena) const {
  VSDisconnectNotify* n = new VSDisconnectNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VSDisconnectNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:packets.VSDisconnectNotify)
}

bool VSDisconnectNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packets.VSDisconnectNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:packets.VSDisconnectNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packets.VSDisconnectNotify)
  return false;
#undef DO_
}

void VSDisconnectNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packets.VSDisconnectNotify)
  // @@protoc_insertion_point(serialize_end:packets.VSDisconnectNotify)
}

::google::protobuf::uint8* VSDisconnectNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:packets.VSDisconnectNotify)
  // @@protoc_insertion_point(serialize_to_array_end:packets.VSDisconnectNotify)
  return target;
}

int VSDisconnectNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:packets.VSDisconnectNotify)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VSDisconnectNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packets.VSDisconnectNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VSDisconnectNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VSDisconnectNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packets.VSDisconnectNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packets.VSDisconnectNotify)
    MergeFrom(*source);
  }
}

void VSDisconnectNotify::MergeFrom(const VSDisconnectNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packets.VSDisconnectNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void VSDisconnectNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packets.VSDisconnectNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VSDisconnectNotify::CopyFrom(const VSDisconnectNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packets.VSDisconnectNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VSDisconnectNotify::IsInitialized() const {

  return true;
}

void VSDisconnectNotify::Swap(VSDisconnectNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VSDisconnectNotify::InternalSwap(VSDisconnectNotify* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VSDisconnectNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VSDisconnectNotify_descriptor_;
  metadata.reflection = VSDisconnectNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VSDisconnectNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace packets

// @@protoc_insertion_point(global_scope)
